{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://excel-custom-functions/webpack/bootstrap","webpack://excel-custom-functions/webpack/runtime/define property getters","webpack://excel-custom-functions/webpack/runtime/global","webpack://excel-custom-functions/webpack/runtime/hasOwnProperty shorthand","webpack://excel-custom-functions/webpack/runtime/publicPath","webpack://excel-custom-functions/webpack/runtime/jsonp chunk loading","webpack://excel-custom-functions/./src/taskpane/taskpane.ts","webpack://excel-custom-functions/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n\n// The initialize function must be run each time a new page is loaded\nOffice.onReady(() => {\n  document.getElementById(\"sideload-msg\").style.display = \"none\";\n  document.getElementById(\"app-body\").style.display = \"flex\";\n  \n  // タブと設定フォームを追加\n  const appBody = document.getElementById(\"app-body\");\n  const tabContainer = createTabContainer();\n  appBody.appendChild(tabContainer);\n  \n  // 設定保存ボタンのイベントリスナーを設定\n  document.getElementById(\"saveAzureSettings\").onclick = saveAzureSettings;\n  document.getElementById(\"saveOpenAISettings\").onclick = saveOpenAISettings;\n  document.getElementById(\"saveGeminiSettings\").onclick = saveGeminiSettings;\n  document.getElementById(\"saveClaudeSettings\").onclick = saveClaudeSettings;\n  \n  // Temperatureスライダーのイベントリスナーを設定\n  setupTemperatureSliders();\n  \n  // API URLの更新イベントリスナーを設定\n  setupApiUrlUpdaters();\n  \n  // 保存された設定を読み込む\n  loadSettings();  \n});\n\nexport async function run() {\n  try {\n    await Excel.run(async (context) => {\n      /**\n       * Insert your Excel code here\n       */\n      const range = context.workbook.getSelectedRange();\n\n      // Read the range address\n      range.load(\"address\");\n\n      // Update the fill color\n      range.format.fill.color = \"yellow\";\n\n      await context.sync();\n      console.log(`The range address was ${range.address}.`);\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// タブコンテナのHTML要素を作成\nfunction createTabContainer() {\n  const container = document.createElement('div');\n  container.innerHTML = `\n    <div class=\"tab-container\">\n      <div class=\"tab-buttons\">\n        <button class=\"tab-button active\" data-tab=\"azure\">Azure OpenAI</button>\n        <button class=\"tab-button\" data-tab=\"openai\">OpenAI</button>\n        <button class=\"tab-button\" data-tab=\"gemini\">Gemini</button>\n        <button class=\"tab-button\" data-tab=\"claude\">Claude</button>\n      </div>\n      <div class=\"tab-content\">\n        <div id=\"azure-tab\" class=\"tab-pane active\">\n          ${createAzureSettingsForm()}\n        </div>\n        <div id=\"openai-tab\" class=\"tab-pane\">\n          ${createOpenAISettingsForm()}\n        </div>\n        <div id=\"gemini-tab\" class=\"tab-pane\">\n          ${createGeminiSettingsForm()}\n        </div>\n        <div id=\"claude-tab\" class=\"tab-pane\">\n          ${createClaudeSettingsForm()}\n        </div>\n      </div>\n    </div>\n  `;\n\n  // タブ切り替えのイベントリスナーを設定\n  const tabButtons = container.querySelectorAll('.tab-button');\n  tabButtons.forEach(button => {\n    button.addEventListener('click', () => {\n      // アクティブなタブを切り替え\n      tabButtons.forEach(btn => btn.classList.remove('active'));\n      button.classList.add('active');\n\n      // タブコンテンツを切り替え\n      const tabId = button.getAttribute('data-tab');\n      const tabPanes = container.querySelectorAll('.tab-pane');\n      tabPanes.forEach(pane => pane.classList.remove('active'));\n      container.querySelector(`#${tabId}-tab`).classList.add('active');\n    });\n  });\n\n  return container;\n}\n\n// Azure OpenAI設定フォームのHTML要素を作成\nfunction createAzureSettingsForm() {\n  return `\n    <div class=\"settings-form\">\n      <h3>Azure OpenAI</h3>\n      <div class=\"form-group\">\n        <label for=\"azureApiKey\">\n          API Key:\n          <a href=\"https://learn.microsoft.com/ja-jp/azure/ai-services/openai/how-to/create-resource\" \n             class=\"info-icon\" \n             target=\"_blank\" \n             rel=\"noopener noreferrer\"\n             title=\"How to get an API Key\">\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" fill=\"none\">\n              <circle cx=\"10\" cy=\"10\" r=\"9\" stroke=\"#0078D4\" stroke-width=\"2\" fill=\"#fff\"/>\n              <rect x=\"9\" y=\"8\" width=\"2\" height=\"6\" rx=\"1\" fill=\"#0078D4\"/>\n              <rect x=\"9\" y=\"5\" width=\"2\" height=\"2\" rx=\"1\" fill=\"#0078D4\"/>\n            </svg>\n          </a>\n        </label>\n        <input type=\"password\" id=\"azureApiKey\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"azureEndpoint\">Endpoint:</label>\n        <input type=\"text\" id=\"azureEndpoint\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"azureDeploymentName\">Deployment Name:</label>\n        <input type=\"text\" id=\"azureDeploymentName\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"azureApiVersion\">API Version:</label>\n        <input type=\"text\" id=\"azureApiVersion\" class=\"form-control\" value=\"2024-02-15-preview\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"azureApiUrl\">API URL:</label>\n        <input type=\"text\" id=\"azureApiUrl\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"azureTemperature\">\n          Temperature: \n          <a href=\"https://learn.microsoft.com/en-us/azure/ai-foundry/openai/reference\"\n             class=\"info-icon\"\n             target=\"_blank\"\n             rel=\"noopener noreferrer\"\n             title=\"Check temperature\">\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" fill=\"none\">\n              <circle cx=\"10\" cy=\"10\" r=\"9\" stroke=\"#0078D4\" stroke-width=\"2\" fill=\"#fff\"/>\n              <rect x=\"9\" y=\"8\" width=\"2\" height=\"6\" rx=\"1\" fill=\"#0078D4\"/>\n              <rect x=\"9\" y=\"5\" width=\"2\" height=\"2\" rx=\"1\" fill=\"#0078D4\"/>\n            </svg>\n          </a>\n          <span id=\"azureTemperatureValue\">0.7</span>\n        </label>\n        <input type=\"range\" id=\"azureTemperature\" class=\"form-control\" min=\"0\" max=\"2\" step=\"0.1\" value=\"0.7\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"azureMaxTokens\">\n          Max Tokens:\n          <a href=\"https://learn.microsoft.com/en-us/azure/ai-foundry/openai/reference\"\n             class=\"info-icon\"\n             target=\"_blank\"\n             rel=\"noopener noreferrer\"\n             title=\"Check max tokens\">\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" fill=\"none\">\n              <circle cx=\"10\" cy=\"10\" r=\"9\" stroke=\"#0078D4\" stroke-width=\"2\" fill=\"#fff\"/>\n              <rect x=\"9\" y=\"8\" width=\"2\" height=\"6\" rx=\"1\" fill=\"#0078D4\"/>\n              <rect x=\"9\" y=\"5\" width=\"2\" height=\"2\" rx=\"1\" fill=\"#0078D4\"/>\n            </svg>\n          </a>\n        </label>\n        <input type=\"number\" id=\"azureMaxTokens\" class=\"form-control\" value=\"1000\" min=\"1\">\n      </div>\n      <button id=\"saveAzureSettings\" class=\"btn btn-primary\">Save</button>\n    </div>\n  `;\n}\n\n// OpenAI設定フォームのHTML要素を作成\nfunction createOpenAISettingsForm() {\n  return `\n    <div class=\"settings-form\">\n      <h3>OpenAI</h3>\n      <div class=\"form-group\">\n        <label for=\"openaiApiKey\">\n          API Key:\n          <a href=\"https://platform.openai.com/api-keys\"\n             class=\"info-icon\"\n             target=\"_blank\"\n             rel=\"noopener noreferrer\"\n             title=\"How to get an API Key\">\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" fill=\"none\">\n              <circle cx=\"10\" cy=\"10\" r=\"9\" stroke=\"#0078D4\" stroke-width=\"2\" fill=\"#fff\"/>\n              <rect x=\"9\" y=\"8\" width=\"2\" height=\"6\" rx=\"1\" fill=\"#0078D4\"/>\n              <rect x=\"9\" y=\"5\" width=\"2\" height=\"2\" rx=\"1\" fill=\"#0078D4\"/>\n            </svg>\n          </a>\n        </label>\n        <input type=\"password\" id=\"openaiApiKey\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"openaiModel\">\n          Model:\n          <a href=\"https://platform.openai.com/docs/models\"\n             class=\"info-icon\"\n             target=\"_blank\"\n             rel=\"noopener noreferrer\"\n             title=\"Check models\">\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" fill=\"none\">\n              <circle cx=\"10\" cy=\"10\" r=\"9\" stroke=\"#0078D4\" stroke-width=\"2\" fill=\"#fff\"/>\n              <rect x=\"9\" y=\"8\" width=\"2\" height=\"6\" rx=\"1\" fill=\"#0078D4\"/>\n              <rect x=\"9\" y=\"5\" width=\"2\" height=\"2\" rx=\"1\" fill=\"#0078D4\"/>\n            </svg>\n          </a>\n        </label>\n        <input type=\"text\" id=\"openaiModel\" class=\"form-control\" value=\"gpt-4o-mini\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"openaiTemperature\">\n          Temperature: \n          <a href=\"https://platform.openai.com/docs/api-reference/responses/create#responses-create-temperature\"\n             class=\"info-icon\"\n             target=\"_blank\"\n             rel=\"noopener noreferrer\"\n             title=\"Check temperature\">\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" fill=\"none\">\n              <circle cx=\"10\" cy=\"10\" r=\"9\" stroke=\"#0078D4\" stroke-width=\"2\" fill=\"#fff\"/>\n              <rect x=\"9\" y=\"8\" width=\"2\" height=\"6\" rx=\"1\" fill=\"#0078D4\"/>\n              <rect x=\"9\" y=\"5\" width=\"2\" height=\"2\" rx=\"1\" fill=\"#0078D4\"/>\n            </svg>\n          </a>\n          <span id=\"openaiTemperatureValue\">0.7</span>\n        </label>\n        <input type=\"range\" id=\"openaiTemperature\" class=\"form-control\" min=\"0\" max=\"2\" step=\"0.1\" value=\"0.7\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"openaiMaxTokens\">\n          Max Tokens:\n          <a href=\"https://platform.openai.com/docs/api-reference/responses/create#responses-create-max_output_tokens\"\n             class=\"info-icon\"\n             target=\"_blank\"\n             rel=\"noopener noreferrer\"\n             title=\"Check max tokens\">\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" fill=\"none\">\n              <circle cx=\"10\" cy=\"10\" r=\"9\" stroke=\"#0078D4\" stroke-width=\"2\" fill=\"#fff\"/>\n              <rect x=\"9\" y=\"8\" width=\"2\" height=\"6\" rx=\"1\" fill=\"#0078D4\"/>\n              <rect x=\"9\" y=\"5\" width=\"2\" height=\"2\" rx=\"1\" fill=\"#0078D4\"/>\n            </svg>\n          </a>\n        </label>\n        <input type=\"number\" id=\"openaiMaxTokens\" class=\"form-control\" value=\"1000\" min=\"1\">\n      </div>\n      <button id=\"saveOpenAISettings\" class=\"btn btn-primary\">Save</button>\n    </div>\n  `;\n}\n\n// Google Gemini設定フォームのHTML要素を作成\nfunction createGeminiSettingsForm() {\n  return `\n    <div class=\"settings-form\">\n      <h3>Google Gemini</h3>\n      <div class=\"form-group\">\n        <label for=\"geminiApiKey\">\n          API Key:\n          <a href=\"https://ai.google.dev/gemini-api/docs/api-key\"\n             class=\"info-icon\"\n             target=\"_blank\"\n             rel=\"noopener noreferrer\"\n             title=\"How to get an API Key\">\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" fill=\"none\">\n              <circle cx=\"10\" cy=\"10\" r=\"9\" stroke=\"#0078D4\" stroke-width=\"2\" fill=\"#fff\"/>\n              <rect x=\"9\" y=\"8\" width=\"2\" height=\"6\" rx=\"1\" fill=\"#0078D4\"/>\n              <rect x=\"9\" y=\"5\" width=\"2\" height=\"2\" rx=\"1\" fill=\"#0078D4\"/>\n            </svg>\n          </a>\n        </label>\n        <input type=\"password\" id=\"geminiApiKey\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"geminiModel\">\n          Model:\n          <a href=\"https://ai.google.dev/gemini-api/docs/models\"\n             class=\"info-icon\"\n             target=\"_blank\"\n             rel=\"noopener noreferrer\"\n             title=\"Check models\">\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" fill=\"none\">\n              <circle cx=\"10\" cy=\"10\" r=\"9\" stroke=\"#0078D4\" stroke-width=\"2\" fill=\"#fff\"/>\n              <rect x=\"9\" y=\"8\" width=\"2\" height=\"6\" rx=\"1\" fill=\"#0078D4\"/>\n              <rect x=\"9\" y=\"5\" width=\"2\" height=\"2\" rx=\"1\" fill=\"#0078D4\"/>\n            </svg>\n          </a>\n        </label>\n        <input type=\"text\" id=\"geminiModel\" class=\"form-control\" value=\"gemini-2.0-flash-lite\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"geminiTemperature\">\n          Temperature: \n          <a href=\"https://cloud.google.com/vertex-ai/generative-ai/docs/learn/prompts/adjust-parameter-values\"\n             class=\"info-icon\"\n             target=\"_blank\"\n             rel=\"noopener noreferrer\"\n             title=\"Check temperature\">\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" fill=\"none\">\n              <circle cx=\"10\" cy=\"10\" r=\"9\" stroke=\"#0078D4\" stroke-width=\"2\" fill=\"#fff\"/>\n              <rect x=\"9\" y=\"8\" width=\"2\" height=\"6\" rx=\"1\" fill=\"#0078D4\"/>\n              <rect x=\"9\" y=\"5\" width=\"2\" height=\"2\" rx=\"1\" fill=\"#0078D4\"/>\n            </svg>\n          </a>\n          <span id=\"geminiTemperatureValue\">0.7</span>\n        </label>\n        <input type=\"range\" id=\"geminiTemperature\" class=\"form-control\" min=\"0\" max=\"2\" step=\"0.1\" value=\"0.7\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"geminiMaxTokens\">\n          Max Tokens:\n          <a href=\"https://cloud.google.com/vertex-ai/generative-ai/docs/learn/prompts/adjust-parameter-values\"\n             class=\"info-icon\"\n             target=\"_blank\"\n             rel=\"noopener noreferrer\"\n             title=\"Check max tokens\">\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" fill=\"none\">\n              <circle cx=\"10\" cy=\"10\" r=\"9\" stroke=\"#0078D4\" stroke-width=\"2\" fill=\"#fff\"/>\n              <rect x=\"9\" y=\"8\" width=\"2\" height=\"6\" rx=\"1\" fill=\"#0078D4\"/>\n              <rect x=\"9\" y=\"5\" width=\"2\" height=\"2\" rx=\"1\" fill=\"#0078D4\"/>\n            </svg>\n          </a>\n        </label>\n        <input type=\"number\" id=\"geminiMaxTokens\" class=\"form-control\" value=\"1000\" min=\"1\">\n      </div>\n      <button id=\"saveGeminiSettings\" class=\"btn btn-primary\">Save</button>\n    </div>\n  `;\n}\n\n// Claude設定フォームのHTML要素を作成\nfunction createClaudeSettingsForm() {\n  return `\n    <div class=\"settings-form\">\n      <h3>Anthropic Claude</h3>\n      <div class=\"form-group\">\n        <label for=\"claudeApiKey\">\n          API Key:\n          <a href=\"https://console.anthropic.com/dashboard\"\n             class=\"info-icon\"\n             target=\"_blank\"\n             rel=\"noopener noreferrer\"\n             title=\"How to get an API Key\">\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" fill=\"none\">\n              <circle cx=\"10\" cy=\"10\" r=\"9\" stroke=\"#0078D4\" stroke-width=\"2\" fill=\"#fff\"/>\n              <rect x=\"9\" y=\"8\" width=\"2\" height=\"6\" rx=\"1\" fill=\"#0078D4\"/>\n              <rect x=\"9\" y=\"5\" width=\"2\" height=\"2\" rx=\"1\" fill=\"#0078D4\"/>\n            </svg>\n          </a>\n        </label>\n        <input type=\"password\" id=\"claudeApiKey\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"claudeModel\">\n          Model:\n          <a href=\"https://docs.anthropic.com/en/docs/about-claude/models/overview\"\n             class=\"info-icon\"\n             target=\"_blank\"\n             rel=\"noopener noreferrer\"\n             title=\"Check models\">\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" fill=\"none\">\n              <circle cx=\"10\" cy=\"10\" r=\"9\" stroke=\"#0078D4\" stroke-width=\"2\" fill=\"#fff\"/>\n              <rect x=\"9\" y=\"8\" width=\"2\" height=\"6\" rx=\"1\" fill=\"#0078D4\"/>\n              <rect x=\"9\" y=\"5\" width=\"2\" height=\"2\" rx=\"1\" fill=\"#0078D4\"/>\n            </svg>\n          </a>\n        </label>\n        <input type=\"text\" id=\"claudeModel\" class=\"form-control\" value=\"claude-3-5-sonnet-latest\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"claudeTemperature\">\n          Temperature: \n          <a href=\"https://docs.anthropic.com/en/api/messages#body-temperature\"\n             class=\"info-icon\"\n             target=\"_blank\"\n             rel=\"noopener noreferrer\"\n             title=\"Check temperature\">\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" fill=\"none\">\n              <circle cx=\"10\" cy=\"10\" r=\"9\" stroke=\"#0078D4\" stroke-width=\"2\" fill=\"#fff\"/>\n              <rect x=\"9\" y=\"8\" width=\"2\" height=\"6\" rx=\"1\" fill=\"#0078D4\"/>\n              <rect x=\"9\" y=\"5\" width=\"2\" height=\"2\" rx=\"1\" fill=\"#0078D4\"/>\n            </svg>\n          </a>\n          <span id=\"claudeTemperatureValue\">0.7</span>\n        </label>\n        <input type=\"range\" id=\"claudeTemperature\" class=\"form-control\" min=\"0\" max=\"2\" step=\"0.1\" value=\"0.7\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"claudeMaxTokens\">\n          Max Tokens:\n          <a href=\"https://docs.anthropic.com/en/api/messages#body-max-tokens\"\n             class=\"info-icon\"\n             target=\"_blank\"\n             rel=\"noopener noreferrer\"\n             title=\"Check max tokens\">\n            \n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" fill=\"none\">\n              <circle cx=\"10\" cy=\"10\" r=\"9\" stroke=\"#0078D4\" stroke-width=\"2\" fill=\"#fff\"/>\n              <rect x=\"9\" y=\"8\" width=\"2\" height=\"6\" rx=\"1\" fill=\"#0078D4\"/>\n              <rect x=\"9\" y=\"5\" width=\"2\" height=\"2\" rx=\"1\" fill=\"#0078D4\"/>\n            </svg>\n          </a>\n        </label>\n        <input type=\"number\" id=\"claudeMaxTokens\" class=\"form-control\" value=\"1000\" min=\"1\">\n      </div>\n      <button id=\"saveClaudeSettings\" class=\"btn btn-primary\">Save</button>\n    </div>\n  `;\n}\n\n// Temperatureスライダーの設定\nfunction setupTemperatureSliders() {\n  const azureTemp = document.getElementById('azureTemperature') as HTMLInputElement;\n  const azureTempValue = document.getElementById('azureTemperatureValue');\n  const openaiTemp = document.getElementById('openaiTemperature') as HTMLInputElement;\n  const openaiTempValue = document.getElementById('openaiTemperatureValue');\n  const geminiTemp = document.getElementById('geminiTemperature') as HTMLInputElement;\n  const geminiTempValue = document.getElementById('geminiTemperatureValue');\n  const claudeTemp = document.getElementById('claudeTemperature') as HTMLInputElement;\n  const claudeTempValue = document.getElementById('claudeTemperatureValue');\n\n  azureTemp.addEventListener('input', () => {\n    azureTempValue.textContent = azureTemp.value;\n  });\n\n  openaiTemp.addEventListener('input', () => {\n    openaiTempValue.textContent = openaiTemp.value;\n  });\n\n  geminiTemp.addEventListener('input', () => {\n    geminiTempValue.textContent = geminiTemp.value;\n  });\n\n  claudeTemp.addEventListener('input', () => {\n    claudeTempValue.textContent = claudeTemp.value;\n  });\n}\n\n// API URLの更新設定\nfunction setupApiUrlUpdaters() {\n  const azureEndpoint = document.getElementById('azureEndpoint') as HTMLInputElement;\n  const azureDeploymentName = document.getElementById('azureDeploymentName') as HTMLInputElement;\n  const azureApiVersion = document.getElementById('azureApiVersion') as HTMLInputElement;\n  const azureApiUrl = document.getElementById('azureApiUrl') as HTMLInputElement;\n\n  const updateAzureApiUrl = () => {\n    const endpoint = azureEndpoint.value || '${Endpoint}';\n    const deploymentName = azureDeploymentName.value || '${Deployment Name}';\n    const apiVersion = azureApiVersion.value || '${API Version}';\n    \n    azureApiUrl.value = `${endpoint}/openai/deployments/${deploymentName}/chat/completions?api-version=${apiVersion}`;\n  };\n\n  const parseAzureApiUrl = (url: string) => {\n    try {\n      const urlObj = new URL(url);\n      const pathParts = urlObj.pathname.split('/');\n      const deploymentName = pathParts[pathParts.indexOf('deployments') + 1];\n      const apiVersion = urlObj.searchParams.get('api-version');\n      \n      if (deploymentName && apiVersion) {\n        azureDeploymentName.value = deploymentName;\n        azureApiVersion.value = apiVersion;\n        azureEndpoint.value = `${urlObj.protocol}//${urlObj.host}`;\n      }\n    } catch (error) {\n      console.error('Failed to parse Azure API URL:', error);\n    }\n  };\n\n  // 初期表示時にURLを更新\n  updateAzureApiUrl();\n\n  // 各入力フィールドの変更を監視\n  azureEndpoint.addEventListener('input', updateAzureApiUrl);\n  azureDeploymentName.addEventListener('input', updateAzureApiUrl);\n  azureApiVersion.addEventListener('input', updateAzureApiUrl);\n  \n  // API URLの変更を監視\n  azureApiUrl.addEventListener('change', () => {\n    parseAzureApiUrl(azureApiUrl.value);\n  });\n}\n\n// Azure OpenAI設定を保存する関数\nasync function saveAzureSettings() {\n  const apiKey = (document.getElementById('azureApiKey') as HTMLInputElement).value;\n  const endpoint = (document.getElementById('azureEndpoint') as HTMLInputElement).value;\n  const deploymentName = (document.getElementById('azureDeploymentName') as HTMLInputElement).value;\n  const apiVersion = (document.getElementById('azureApiVersion') as HTMLInputElement).value;\n  const temperature = (document.getElementById('azureTemperature') as HTMLInputElement).value;\n  const maxTokens = (document.getElementById('azureMaxTokens') as HTMLInputElement).value;\n  const apiUrl = (document.getElementById('azureApiUrl') as HTMLInputElement).value;\n\n  try {\n    Office.context.document.settings.set('azure.apiKey', apiKey);\n    Office.context.document.settings.set('azure.endpoint', endpoint);\n    Office.context.document.settings.set('azure.deploymentName', deploymentName);\n    Office.context.document.settings.set('azure.apiVersion', apiVersion);\n    Office.context.document.settings.set('azure.temperature', temperature);\n    Office.context.document.settings.set('azure.maxTokens', maxTokens);\n    Office.context.document.settings.set('azure.apiUrl', apiUrl);\n    await saveSettingsWithStatus('azure');\n  } catch (error) {\n    console.error('Failed to save Azure OpenAI settings:', error);\n    showStatusMessage('Failed to save Azure OpenAI settings', 'red');\n  }\n}\n\n// OpenAI設定を保存する関数\nasync function saveOpenAISettings() {\n  const apiKey = (document.getElementById('openaiApiKey') as HTMLInputElement).value;\n  const model = (document.getElementById('openaiModel') as HTMLInputElement).value;\n  const temperature = (document.getElementById('openaiTemperature') as HTMLInputElement).value;\n  const maxTokens = (document.getElementById('openaiMaxTokens') as HTMLInputElement).value;\n\n  try {\n    Office.context.document.settings.set('openAI.apiKey', apiKey);\n    Office.context.document.settings.set('openAI.model', model);\n    Office.context.document.settings.set('openAI.temperature', temperature);\n    Office.context.document.settings.set('openAI.maxTokens', maxTokens);\n    await saveSettingsWithStatus('openai');\n  } catch (error) {\n    console.error('Failed to save OpenAI settings:', error);\n    showStatusMessage('Failed to save OpenAI settings', 'red');\n  }\n}\n\n// Google Gemini設定を保存する関数\nasync function saveGeminiSettings() {\n  const apiKey = (document.getElementById('geminiApiKey') as HTMLInputElement).value;\n  const model = (document.getElementById('geminiModel') as HTMLInputElement).value;\n  const temperature = (document.getElementById('geminiTemperature') as HTMLInputElement).value;\n  const maxTokens = (document.getElementById('geminiMaxTokens') as HTMLInputElement).value;\n\n  try {\n    Office.context.document.settings.set('gemini.apiKey', apiKey);\n    Office.context.document.settings.set('gemini.model', model);\n    Office.context.document.settings.set('gemini.temperature', temperature);\n    Office.context.document.settings.set('gemini.maxTokens', maxTokens);\n    await saveSettingsWithStatus('gemini');\n  } catch (error) {\n    console.error('Failed to save Google Gemini settings:', error);\n    showStatusMessage('Failed to save Google Gemini settings', 'red');\n  }\n}\n\n// Claude設定を保存する関数\nasync function saveClaudeSettings() {\n  const apiKey = (document.getElementById('claudeApiKey') as HTMLInputElement).value;\n  const model = (document.getElementById('claudeModel') as HTMLInputElement).value;\n  const temperature = (document.getElementById('claudeTemperature') as HTMLInputElement).value;\n  const maxTokens = (document.getElementById('claudeMaxTokens') as HTMLInputElement).value;\n\n  try {\n    Office.context.document.settings.set('claude.apiKey', apiKey);\n    Office.context.document.settings.set('claude.model', model);\n    Office.context.document.settings.set('claude.temperature', temperature);\n    Office.context.document.settings.set('claude.maxTokens', maxTokens);\n    await saveSettingsWithStatus('claude');\n  } catch (error) {\n    console.error('Failed to save Claude settings:', error);\n    showStatusMessage('Failed to save Claude settings', 'red');\n  }\n}\n\n// 設定保存の共通処理\nasync function saveSettingsWithStatus(provider: string) {\n  return new Promise<void>((resolve, reject) => {\n    Office.context.document.settings.saveAsync((result) => {\n      if (result.status === Office.AsyncResultStatus.Succeeded) {\n        const providerName = provider === 'azure' ? 'Azure OpenAI' :\n                           provider === 'openai' ? 'OpenAI' :\n                           provider === 'gemini' ? 'Google Gemini' :\n                           provider === 'claude' ? 'Anthropic Claude' : provider;\n        showStatusMessage(`${providerName} settings saved successfully`, 'green');\n        resolve();\n      } else {\n        console.error('Failed to save settings:', result.error);\n        showStatusMessage('Failed to save settings', 'red');\n        reject(result.error);\n      }\n    });\n  });\n}\n\n// ステータスメッセージを表示する関数\nfunction showStatusMessage(message: string, color: string) {\n  const statusDiv = document.createElement('div');\n  statusDiv.textContent = message;\n  statusDiv.style.color = color;\n  \n  // アクティブなタブの設定フォームを取得\n  const activeTab = document.querySelector('.tab-pane.active');\n  if (activeTab) {\n    const settingsForm = activeTab.querySelector('.settings-form');\n    if (settingsForm) {\n      settingsForm.appendChild(statusDiv);\n      setTimeout(() => statusDiv.remove(), 3000);\n    }\n  }\n}\n\n// 設定を読み込む関数\nasync function loadSettings() {\n  try {\n    // Azure OpenAI設定の読み込み\n    const azureApiKey = Office.context.document.settings.get('azure.apiKey');\n    const azureEndpoint = Office.context.document.settings.get('azure.endpoint');\n    const azureDeploymentName = Office.context.document.settings.get('azure.deploymentName');\n    const azureApiVersion = Office.context.document.settings.get('azure.apiVersion');\n    const azureTemperature = Office.context.document.settings.get('azure.temperature');\n    const azureMaxTokens = Office.context.document.settings.get('azure.maxTokens');\n    const azureApiUrl = Office.context.document.settings.get('azure.apiUrl');\n\n    if (azureApiKey) (document.getElementById('azureApiKey') as HTMLInputElement).value = azureApiKey;\n    if (azureEndpoint) (document.getElementById('azureEndpoint') as HTMLInputElement).value = azureEndpoint;\n    if (azureDeploymentName) (document.getElementById('azureDeploymentName') as HTMLInputElement).value = azureDeploymentName;\n    if (azureApiVersion) (document.getElementById('azureApiVersion') as HTMLInputElement).value = azureApiVersion;\n    if (azureTemperature) {\n      (document.getElementById('azureTemperature') as HTMLInputElement).value = azureTemperature;\n      document.getElementById('azureTemperatureValue').textContent = azureTemperature;\n    }\n    if (azureMaxTokens) (document.getElementById('azureMaxTokens') as HTMLInputElement).value = azureMaxTokens;\n    if (azureApiUrl) (document.getElementById('azureApiUrl') as HTMLInputElement).value = azureApiUrl;\n\n    // OpenAI設定の読み込み\n    const openaiApiKey = Office.context.document.settings.get('openAI.apiKey');\n    const openaiModel = Office.context.document.settings.get('openAI.model');\n    const openaiTemperature = Office.context.document.settings.get('openAI.temperature');\n    const openaiMaxTokens = Office.context.document.settings.get('openAI.maxTokens');\n\n    if (openaiApiKey) (document.getElementById('openaiApiKey') as HTMLInputElement).value = openaiApiKey;\n    if (openaiModel) (document.getElementById('openaiModel') as HTMLInputElement).value = openaiModel;\n    if (openaiTemperature) {\n      (document.getElementById('openaiTemperature') as HTMLInputElement).value = openaiTemperature;\n      document.getElementById('openaiTemperatureValue').textContent = openaiTemperature;\n    }\n    if (openaiMaxTokens) (document.getElementById('openaiMaxTokens') as HTMLInputElement).value = openaiMaxTokens;\n\n    // Google Gemini設定の読み込み\n    const geminiApiKey = Office.context.document.settings.get('gemini.apiKey');\n    const geminiModel = Office.context.document.settings.get('gemini.model');\n    const geminiTemperature = Office.context.document.settings.get('gemini.temperature');\n    const geminiMaxTokens = Office.context.document.settings.get('gemini.maxTokens');\n\n    if (geminiApiKey) (document.getElementById('geminiApiKey') as HTMLInputElement).value = geminiApiKey;\n    if (geminiModel) (document.getElementById('geminiModel') as HTMLInputElement).value = geminiModel;\n    if (geminiTemperature) {\n      (document.getElementById('geminiTemperature') as HTMLInputElement).value = geminiTemperature;\n      document.getElementById('geminiTemperatureValue').textContent = geminiTemperature;\n    }\n    if (geminiMaxTokens) (document.getElementById('geminiMaxTokens') as HTMLInputElement).value = geminiMaxTokens;\n\n    // Claude設定の読み込み\n    const claudeApiKey = Office.context.document.settings.get('claude.apiKey');\n    const claudeModel = Office.context.document.settings.get('claude.model');\n    const claudeMaxTokens = Office.context.document.settings.get('claude.maxTokens');\n    const claudeTemperature = Office.context.document.settings.get('claude.temperature');\n\n    if (claudeApiKey) (document.getElementById('claudeApiKey') as HTMLInputElement).value = claudeApiKey;\n    if (claudeModel) (document.getElementById('claudeModel') as HTMLInputElement).value = claudeModel;\n    if (claudeMaxTokens) (document.getElementById('claudeMaxTokens') as HTMLInputElement).value = claudeMaxTokens;\n    if (claudeTemperature) {\n      (document.getElementById('claudeTemperature') as HTMLInputElement).value = claudeTemperature;\n      document.getElementById('claudeTemperatureValue').textContent = claudeTemperature;\n    }\n  } catch (error) {\n    console.error('Failed to load settings:', error);\n  }\n}\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Simple AI Functions for Excel</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <section id=\\\"sideload-msg\\\" class=\\\"ms-welcome__main\\\"> <h2 class=\\\"ms-font-xl\\\">Please <a target=\\\"_blank\\\" rel=\\\"noopener\\\" href=\\\"https://learn.microsoft.com/office/dev/add-ins/testing/test-debug-office-add-ins#sideload-an-office-add-in-for-testing\\\">sideload</a> your add-in to see app body.</h2> </section> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\" style=\\\"display:none\\\"> </main> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","_regeneratorRuntime","r","t","n","Symbol","iterator","a","asyncIterator","u","toStringTag","c","value","configurable","writable","h","Generator","create","done","method","arg","delegate","f","sent","_sent","dispatchException","abrupt","s","type","Context","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","getPrototypeOf","y","x","v","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","return","TypeError","next","w","tryEntries","push","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","saveAzureSettings","_saveAzureSettings","_callee3","apiKey","endpoint","deploymentName","apiVersion","temperature","maxTokens","apiUrl","_context3","getElementById","Office","context","settings","set","saveSettingsWithStatus","t0","console","error","showStatusMessage","saveOpenAISettings","_saveOpenAISettings","_callee4","model","_context4","saveGeminiSettings","_saveGeminiSettings","_callee5","_context5","saveClaudeSettings","_saveClaudeSettings","_callee6","_context6","_x","_saveSettingsWithStatus","_callee7","provider","_context7","reject","saveAsync","result","status","AsyncResultStatus","Succeeded","concat","message","color","statusDiv","createElement","textContent","style","activeTab","querySelector","settingsForm","appendChild","setTimeout","remove","_loadSettings","_callee8","azureApiKey","azureEndpoint","azureDeploymentName","azureApiVersion","azureTemperature","azureMaxTokens","azureApiUrl","openaiApiKey","openaiModel","openaiTemperature","openaiMaxTokens","geminiApiKey","geminiModel","geminiTemperature","geminiMaxTokens","claudeApiKey","claudeModel","claudeMaxTokens","claudeTemperature","_context8","onReady","display","azureTemp","azureTempValue","openaiTemp","openaiTempValue","geminiTemp","geminiTempValue","claudeTemp","claudeTempValue","updateAzureApiUrl","parseAzureApiUrl","appBody","tabContainer","container","innerHTML","tabButtons","querySelectorAll","button","addEventListener","btn","classList","add","tabId","getAttribute","pane","createTabContainer","onclick","url","urlObj","URL","pathParts","pathname","split","indexOf","searchParams","protocol","host","loadSettings"],"sourceRoot":""}